---
import BaseLayout from '../../layouts/base.astro';

import BlogPost from '../../elements/BlogPost.astro';

// typings
export interface Post {
    frontmatter: Frontmatter;
    file:        string;
    url:         string;
}

export interface Frontmatter {
    layout:      string;
    title:       string;
    pubDate:     Date;
    description: string;
    author:      string;
    image:       Image;
    tags:        string[];
}

export interface Image {
    url: string;
    alt: string;
}

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  const uniqueTags: any = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag: string) => {
  const filteredPosts = allPosts.filter((post: any) => (post.frontmatter.tags.includes(tag) as boolean));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
});
}

const { tag } : { tag : string }= Astro.params;
const { posts } : { posts : Post[] }= Astro.props;

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post: Post) =>
      <BlogPost url={post.url} title={post.frontmatter.title}/>
    )}
  </ul>

</BaseLayout>
